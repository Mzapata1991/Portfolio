{"ast":null,"code":"import React from \"react\";\nimport lax from \"lax.js\";\nvar selector = \"lax\";\n\nfunction useLax() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      breakpoints = _ref.breakpoints,\n      className = _ref.className;\n\n  var requestRef = React.useRef();\n  selector = className || selector;\n  React.useEffect(function () {\n    lax.setup({\n      breakpoints: breakpoints,\n      selector: \".\".concat(selector)\n    });\n\n    var updateLax = function updateLax() {\n      lax.update(window.scrollY);\n      requestRef.current = window.requestAnimationFrame(updateLax);\n    };\n\n    requestRef.current = window.requestAnimationFrame(updateLax);\n    return function () {\n      if (requestRef.current) {\n        window.cancelAnimationFrame(requestRef.current);\n      }\n    };\n  }, [breakpoints, className]);\n}\n\nfunction useLaxElement() {\n  var ref = React.useRef();\n  React.useEffect(function () {\n    var currentNode = ref.current; // @ts-ignore\n\n    if (currentNode && currentNode.classList && currentNode.classList.add) {\n      // @ts-ignore\n      currentNode.classList.add(selector);\n    }\n\n    lax.addElement(currentNode);\n    return function () {\n      lax.removeElement(currentNode);\n    };\n  }, []);\n  return ref;\n}\n\nexport { useLax, useLaxElement };","map":{"version":3,"sources":["/Users/eduardogarcia/Projects/portafolio_mati/src/helpers/use-lax.js"],"names":["React","lax","selector","useLax","breakpoints","className","requestRef","useRef","useEffect","setup","updateLax","update","window","scrollY","current","requestAnimationFrame","cancelAnimationFrame","useLaxElement","ref","currentNode","classList","add","addElement","removeElement"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,QAAhB;AAEA,IAAIC,QAAQ,GAAG,KAAf;;AAEA,SAASC,MAAT,GAAiD;AAAA,iFAAJ,EAAI;AAAA,MAA/BC,WAA+B,QAA/BA,WAA+B;AAAA,MAAlBC,SAAkB,QAAlBA,SAAkB;;AAC/C,MAAMC,UAAU,GAAGN,KAAK,CAACO,MAAN,EAAnB;AACAL,EAAAA,QAAQ,GAAGG,SAAS,IAAIH,QAAxB;AAEAF,EAAAA,KAAK,CAACQ,SAAN,CAAgB,YAAM;AACpBP,IAAAA,GAAG,CAACQ,KAAJ,CAAU;AAAEL,MAAAA,WAAW,EAAXA,WAAF;AAAeF,MAAAA,QAAQ,aAAMA,QAAN;AAAvB,KAAV;;AAEA,QAAMQ,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtBT,MAAAA,GAAG,CAACU,MAAJ,CAAWC,MAAM,CAACC,OAAlB;AACAP,MAAAA,UAAU,CAACQ,OAAX,GAAqBF,MAAM,CAACG,qBAAP,CAA6BL,SAA7B,CAArB;AACD,KAHD;;AAKAJ,IAAAA,UAAU,CAACQ,OAAX,GAAqBF,MAAM,CAACG,qBAAP,CAA6BL,SAA7B,CAArB;AAEA,WAAO,YAAM;AACX,UAAIJ,UAAU,CAACQ,OAAf,EAAwB;AACtBF,QAAAA,MAAM,CAACI,oBAAP,CAA4BV,UAAU,CAACQ,OAAvC;AACD;AACF,KAJD;AAKD,GAfD,EAeG,CAACV,WAAD,EAAcC,SAAd,CAfH;AAgBD;;AAED,SAASY,aAAT,GAAyB;AACvB,MAAMC,GAAG,GAAGlB,KAAK,CAACO,MAAN,EAAZ;AAEAP,EAAAA,KAAK,CAACQ,SAAN,CAAgB,YAAM;AACpB,QAAMW,WAAW,GAAGD,GAAG,CAACJ,OAAxB,CADoB,CAGpB;;AACA,QAAIK,WAAW,IAAIA,WAAW,CAACC,SAA3B,IAAwCD,WAAW,CAACC,SAAZ,CAAsBC,GAAlE,EAAuE;AACrE;AACAF,MAAAA,WAAW,CAACC,SAAZ,CAAsBC,GAAtB,CAA0BnB,QAA1B;AACD;;AAEDD,IAAAA,GAAG,CAACqB,UAAJ,CAAeH,WAAf;AAEA,WAAO,YAAM;AACXlB,MAAAA,GAAG,CAACsB,aAAJ,CAAkBJ,WAAlB;AACD,KAFD;AAGD,GAdD,EAcG,EAdH;AAgBA,SAAOD,GAAP;AACD;;AAED,SAASf,MAAT,EAAiBc,aAAjB","sourcesContent":["import React from \"react\";\nimport lax from \"lax.js\";\n\nlet selector = \"lax\";\n\nfunction useLax({ breakpoints, className } = {}) {\n  const requestRef = React.useRef();\n  selector = className || selector;\n\n  React.useEffect(() => {\n    lax.setup({ breakpoints, selector: `.${selector}` });\n\n    const updateLax = () => {\n      lax.update(window.scrollY);\n      requestRef.current = window.requestAnimationFrame(updateLax);\n    };\n\n    requestRef.current = window.requestAnimationFrame(updateLax);\n\n    return () => {\n      if (requestRef.current) {\n        window.cancelAnimationFrame(requestRef.current);\n      }\n    };\n  }, [breakpoints, className]);\n}\n\nfunction useLaxElement() {\n  const ref = React.useRef();\n\n  React.useEffect(() => {\n    const currentNode = ref.current;\n\n    // @ts-ignore\n    if (currentNode && currentNode.classList && currentNode.classList.add) {\n      // @ts-ignore\n      currentNode.classList.add(selector);\n    }\n\n    lax.addElement(currentNode);\n\n    return () => {\n      lax.removeElement(currentNode);\n    };\n  }, []);\n\n  return ref;\n}\n\nexport { useLax, useLaxElement };\n"]},"metadata":{},"sourceType":"module"}